// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StoryConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from StoryConfig.proto</summary>
public static partial class StoryConfigReflection {

  #region Descriptor
  /// <summary>File descriptor for StoryConfig.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StoryConfigReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFTdG9yeUNvbmZpZy5wcm90byIuChBTdG9yeUNvbmZpZ0RhdGFzEhoKBEJh",
          "c2UYASADKAsyDC5TdG9yeUNvbmZpZyKcBgoLU3RvcnlDb25maWcSCgoCSUQY",
          "ASABKAUSDAoERGVzYxgCIAEoCRIPCgdUYWxrMElkGAMgASgFEg8KB1RhbGsx",
          "SWQYBCABKAUSDwoHVGFsazJJZBgFIAEoBRIPCgdUYWxrM0lkGAYgASgFEg8K",
          "B1RhbGs0SWQYByABKAUSDwoHVGFsazVJZBgIIAEoBRIPCgdUYWxrNklkGAkg",
          "ASgFEg8KB1RhbGs3SWQYCiABKAUSDwoHVGFsazhJZBgLIAEoBRIPCgdUYWxr",
          "OUlkGAwgASgFEhAKCFRhbGsxMElkGA0gASgFEhAKCFRhbGsxMUlkGA4gASgF",
          "EhAKCFRhbGsxMklkGA8gASgFEhAKCFRhbGsxM0lkGBAgASgFEhAKCFRhbGsx",
          "NElkGBEgASgFEhAKCFRhbGsxNUlkGBIgASgFEhAKCFRhbGsxNklkGBMgASgF",
          "EhAKCFRhbGsxN0lkGBQgASgFEhAKCFRhbGsxOElkGBUgASgFEhAKCFRhbGsx",
          "OUlkGBYgASgFEhAKCFRhbGsyMElkGBcgASgFEhAKCFRhbGsyMUlkGBggASgF",
          "EhAKCFRhbGsyMklkGBkgASgFEhAKCFRhbGsyM0lkGBogASgFEhAKCFRhbGsy",
          "NElkGBsgASgFEhAKCFRhbGsyNUlkGBwgASgFEhAKCFRhbGsyNklkGB0gASgF",
          "EhAKCFRhbGsyN0lkGB4gASgFEhAKCFRhbGsyOElkGB8gASgFEhAKCFRhbGsy",
          "OUlkGCAgASgFEhAKCFRhbGszMElkGCEgASgFEhAKCFRhbGszMUlkGCIgASgF",
          "EhAKCFRhbGszMklkGCMgASgFEhAKCFRhbGszM0lkGCQgASgFEhAKCFRhbGsz",
          "NElkGCUgASgFEg8KB09wdHR5cGUYJiABKAUSDwoHT3B0dGV4dBgnIAEoCRIR",
          "CglTdG9yeTBPcHQYKCABKAkSEgoKU3RvcnkwSnVtcBgpIAEoBRISCgpTdG9y",
          "eTBHb29kGCogASgFEioKDVN0b3J5MU9wdEluZm8YKyADKAsyEy5TdG9yeVN0",
          "b3J5MU9wdEluZm8iUAoSU3RvcnlTdG9yeTFPcHRJbmZvEhIKCnN0b3J5MW9w",
          "dDEYASABKAkSEgoKc3Rvcnkxb3B0MhgCIAEoBRISCgpzdG9yeTFvcHQzGAMg",
          "ASgFYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::StoryConfigDatas), global::StoryConfigDatas.Parser, new[]{ "Base" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StoryConfig), global::StoryConfig.Parser, new[]{ "ID", "Desc", "Talk0Id", "Talk1Id", "Talk2Id", "Talk3Id", "Talk4Id", "Talk5Id", "Talk6Id", "Talk7Id", "Talk8Id", "Talk9Id", "Talk10Id", "Talk11Id", "Talk12Id", "Talk13Id", "Talk14Id", "Talk15Id", "Talk16Id", "Talk17Id", "Talk18Id", "Talk19Id", "Talk20Id", "Talk21Id", "Talk22Id", "Talk23Id", "Talk24Id", "Talk25Id", "Talk26Id", "Talk27Id", "Talk28Id", "Talk29Id", "Talk30Id", "Talk31Id", "Talk32Id", "Talk33Id", "Talk34Id", "Opttype", "Opttext", "Story0Opt", "Story0Jump", "Story0Good", "Story1OptInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StoryStory1OptInfo), global::StoryStory1OptInfo.Parser, new[]{ "Story1Opt1", "Story1Opt2", "Story1Opt3" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class StoryConfigDatas : pb::IMessage<StoryConfigDatas> {
  private static readonly pb::MessageParser<StoryConfigDatas> _parser = new pb::MessageParser<StoryConfigDatas>(() => new StoryConfigDatas());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StoryConfigDatas> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StoryConfigReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfigDatas() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfigDatas(StoryConfigDatas other) : this() {
    base_ = other.base_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfigDatas Clone() {
    return new StoryConfigDatas(this);
  }

  /// <summary>Field number for the "Base" field.</summary>
  public const int BaseFieldNumber = 1;
  private static readonly pb::FieldCodec<global::StoryConfig> _repeated_base_codec
      = pb::FieldCodec.ForMessage(10, global::StoryConfig.Parser);
  private readonly pbc::RepeatedField<global::StoryConfig> base_ = new pbc::RepeatedField<global::StoryConfig>();
  /// <summary>
  ///Base===>StoryConfig类的数组列表类
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StoryConfig> Base {
    get { return base_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StoryConfigDatas);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StoryConfigDatas other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!base_.Equals(other.base_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= base_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    base_.WriteTo(output, _repeated_base_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += base_.CalculateSize(_repeated_base_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StoryConfigDatas other) {
    if (other == null) {
      return;
    }
    base_.Add(other.base_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          base_.AddEntriesFrom(input, _repeated_base_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class StoryConfig : pb::IMessage<StoryConfig> {
  private static readonly pb::MessageParser<StoryConfig> _parser = new pb::MessageParser<StoryConfig>(() => new StoryConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StoryConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StoryConfigReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfig(StoryConfig other) : this() {
    iD_ = other.iD_;
    desc_ = other.desc_;
    talk0Id_ = other.talk0Id_;
    talk1Id_ = other.talk1Id_;
    talk2Id_ = other.talk2Id_;
    talk3Id_ = other.talk3Id_;
    talk4Id_ = other.talk4Id_;
    talk5Id_ = other.talk5Id_;
    talk6Id_ = other.talk6Id_;
    talk7Id_ = other.talk7Id_;
    talk8Id_ = other.talk8Id_;
    talk9Id_ = other.talk9Id_;
    talk10Id_ = other.talk10Id_;
    talk11Id_ = other.talk11Id_;
    talk12Id_ = other.talk12Id_;
    talk13Id_ = other.talk13Id_;
    talk14Id_ = other.talk14Id_;
    talk15Id_ = other.talk15Id_;
    talk16Id_ = other.talk16Id_;
    talk17Id_ = other.talk17Id_;
    talk18Id_ = other.talk18Id_;
    talk19Id_ = other.talk19Id_;
    talk20Id_ = other.talk20Id_;
    talk21Id_ = other.talk21Id_;
    talk22Id_ = other.talk22Id_;
    talk23Id_ = other.talk23Id_;
    talk24Id_ = other.talk24Id_;
    talk25Id_ = other.talk25Id_;
    talk26Id_ = other.talk26Id_;
    talk27Id_ = other.talk27Id_;
    talk28Id_ = other.talk28Id_;
    talk29Id_ = other.talk29Id_;
    talk30Id_ = other.talk30Id_;
    talk31Id_ = other.talk31Id_;
    talk32Id_ = other.talk32Id_;
    talk33Id_ = other.talk33Id_;
    talk34Id_ = other.talk34Id_;
    opttype_ = other.opttype_;
    opttext_ = other.opttext_;
    story0Opt_ = other.story0Opt_;
    story0Jump_ = other.story0Jump_;
    story0Good_ = other.story0Good_;
    story1OptInfo_ = other.story1OptInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryConfig Clone() {
    return new StoryConfig(this);
  }

  /// <summary>Field number for the "ID" field.</summary>
  public const int IDFieldNumber = 1;
  private int iD_;
  /// <summary>
  ///ID===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ID {
    get { return iD_; }
    set {
      iD_ = value;
    }
  }

  /// <summary>Field number for the "Desc" field.</summary>
  public const int DescFieldNumber = 2;
  private string desc_ = "";
  /// <summary>
  ///Desc===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Desc {
    get { return desc_; }
    set {
      desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Talk0Id" field.</summary>
  public const int Talk0IdFieldNumber = 3;
  private int talk0Id_;
  /// <summary>
  ///Talk0Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk0Id {
    get { return talk0Id_; }
    set {
      talk0Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk1Id" field.</summary>
  public const int Talk1IdFieldNumber = 4;
  private int talk1Id_;
  /// <summary>
  ///Talk1Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk1Id {
    get { return talk1Id_; }
    set {
      talk1Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk2Id" field.</summary>
  public const int Talk2IdFieldNumber = 5;
  private int talk2Id_;
  /// <summary>
  ///Talk2Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk2Id {
    get { return talk2Id_; }
    set {
      talk2Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk3Id" field.</summary>
  public const int Talk3IdFieldNumber = 6;
  private int talk3Id_;
  /// <summary>
  ///Talk3Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk3Id {
    get { return talk3Id_; }
    set {
      talk3Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk4Id" field.</summary>
  public const int Talk4IdFieldNumber = 7;
  private int talk4Id_;
  /// <summary>
  ///Talk4Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk4Id {
    get { return talk4Id_; }
    set {
      talk4Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk5Id" field.</summary>
  public const int Talk5IdFieldNumber = 8;
  private int talk5Id_;
  /// <summary>
  ///Talk5Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk5Id {
    get { return talk5Id_; }
    set {
      talk5Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk6Id" field.</summary>
  public const int Talk6IdFieldNumber = 9;
  private int talk6Id_;
  /// <summary>
  ///Talk6Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk6Id {
    get { return talk6Id_; }
    set {
      talk6Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk7Id" field.</summary>
  public const int Talk7IdFieldNumber = 10;
  private int talk7Id_;
  /// <summary>
  ///Talk7Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk7Id {
    get { return talk7Id_; }
    set {
      talk7Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk8Id" field.</summary>
  public const int Talk8IdFieldNumber = 11;
  private int talk8Id_;
  /// <summary>
  ///Talk8Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk8Id {
    get { return talk8Id_; }
    set {
      talk8Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk9Id" field.</summary>
  public const int Talk9IdFieldNumber = 12;
  private int talk9Id_;
  /// <summary>
  ///Talk9Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk9Id {
    get { return talk9Id_; }
    set {
      talk9Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk10Id" field.</summary>
  public const int Talk10IdFieldNumber = 13;
  private int talk10Id_;
  /// <summary>
  ///Talk10Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk10Id {
    get { return talk10Id_; }
    set {
      talk10Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk11Id" field.</summary>
  public const int Talk11IdFieldNumber = 14;
  private int talk11Id_;
  /// <summary>
  ///Talk11Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk11Id {
    get { return talk11Id_; }
    set {
      talk11Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk12Id" field.</summary>
  public const int Talk12IdFieldNumber = 15;
  private int talk12Id_;
  /// <summary>
  ///Talk12Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk12Id {
    get { return talk12Id_; }
    set {
      talk12Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk13Id" field.</summary>
  public const int Talk13IdFieldNumber = 16;
  private int talk13Id_;
  /// <summary>
  ///Talk13Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk13Id {
    get { return talk13Id_; }
    set {
      talk13Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk14Id" field.</summary>
  public const int Talk14IdFieldNumber = 17;
  private int talk14Id_;
  /// <summary>
  ///Talk14Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk14Id {
    get { return talk14Id_; }
    set {
      talk14Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk15Id" field.</summary>
  public const int Talk15IdFieldNumber = 18;
  private int talk15Id_;
  /// <summary>
  ///Talk15Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk15Id {
    get { return talk15Id_; }
    set {
      talk15Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk16Id" field.</summary>
  public const int Talk16IdFieldNumber = 19;
  private int talk16Id_;
  /// <summary>
  ///Talk16Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk16Id {
    get { return talk16Id_; }
    set {
      talk16Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk17Id" field.</summary>
  public const int Talk17IdFieldNumber = 20;
  private int talk17Id_;
  /// <summary>
  ///Talk17Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk17Id {
    get { return talk17Id_; }
    set {
      talk17Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk18Id" field.</summary>
  public const int Talk18IdFieldNumber = 21;
  private int talk18Id_;
  /// <summary>
  ///Talk18Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk18Id {
    get { return talk18Id_; }
    set {
      talk18Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk19Id" field.</summary>
  public const int Talk19IdFieldNumber = 22;
  private int talk19Id_;
  /// <summary>
  ///Talk19Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk19Id {
    get { return talk19Id_; }
    set {
      talk19Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk20Id" field.</summary>
  public const int Talk20IdFieldNumber = 23;
  private int talk20Id_;
  /// <summary>
  ///Talk20Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk20Id {
    get { return talk20Id_; }
    set {
      talk20Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk21Id" field.</summary>
  public const int Talk21IdFieldNumber = 24;
  private int talk21Id_;
  /// <summary>
  ///Talk21Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk21Id {
    get { return talk21Id_; }
    set {
      talk21Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk22Id" field.</summary>
  public const int Talk22IdFieldNumber = 25;
  private int talk22Id_;
  /// <summary>
  ///Talk22Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk22Id {
    get { return talk22Id_; }
    set {
      talk22Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk23Id" field.</summary>
  public const int Talk23IdFieldNumber = 26;
  private int talk23Id_;
  /// <summary>
  ///Talk23Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk23Id {
    get { return talk23Id_; }
    set {
      talk23Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk24Id" field.</summary>
  public const int Talk24IdFieldNumber = 27;
  private int talk24Id_;
  /// <summary>
  ///Talk24Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk24Id {
    get { return talk24Id_; }
    set {
      talk24Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk25Id" field.</summary>
  public const int Talk25IdFieldNumber = 28;
  private int talk25Id_;
  /// <summary>
  ///Talk25Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk25Id {
    get { return talk25Id_; }
    set {
      talk25Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk26Id" field.</summary>
  public const int Talk26IdFieldNumber = 29;
  private int talk26Id_;
  /// <summary>
  ///Talk26Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk26Id {
    get { return talk26Id_; }
    set {
      talk26Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk27Id" field.</summary>
  public const int Talk27IdFieldNumber = 30;
  private int talk27Id_;
  /// <summary>
  ///Talk27Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk27Id {
    get { return talk27Id_; }
    set {
      talk27Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk28Id" field.</summary>
  public const int Talk28IdFieldNumber = 31;
  private int talk28Id_;
  /// <summary>
  ///Talk28Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk28Id {
    get { return talk28Id_; }
    set {
      talk28Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk29Id" field.</summary>
  public const int Talk29IdFieldNumber = 32;
  private int talk29Id_;
  /// <summary>
  ///Talk29Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk29Id {
    get { return talk29Id_; }
    set {
      talk29Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk30Id" field.</summary>
  public const int Talk30IdFieldNumber = 33;
  private int talk30Id_;
  /// <summary>
  ///Talk30Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk30Id {
    get { return talk30Id_; }
    set {
      talk30Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk31Id" field.</summary>
  public const int Talk31IdFieldNumber = 34;
  private int talk31Id_;
  /// <summary>
  ///Talk31Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk31Id {
    get { return talk31Id_; }
    set {
      talk31Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk32Id" field.</summary>
  public const int Talk32IdFieldNumber = 35;
  private int talk32Id_;
  /// <summary>
  ///Talk32Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk32Id {
    get { return talk32Id_; }
    set {
      talk32Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk33Id" field.</summary>
  public const int Talk33IdFieldNumber = 36;
  private int talk33Id_;
  /// <summary>
  ///Talk33Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk33Id {
    get { return talk33Id_; }
    set {
      talk33Id_ = value;
    }
  }

  /// <summary>Field number for the "Talk34Id" field.</summary>
  public const int Talk34IdFieldNumber = 37;
  private int talk34Id_;
  /// <summary>
  ///Talk34Id===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Talk34Id {
    get { return talk34Id_; }
    set {
      talk34Id_ = value;
    }
  }

  /// <summary>Field number for the "Opttype" field.</summary>
  public const int OpttypeFieldNumber = 38;
  private int opttype_;
  /// <summary>
  ///Opttype===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Opttype {
    get { return opttype_; }
    set {
      opttype_ = value;
    }
  }

  /// <summary>Field number for the "Opttext" field.</summary>
  public const int OpttextFieldNumber = 39;
  private string opttext_ = "";
  /// <summary>
  ///Opttext===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Opttext {
    get { return opttext_; }
    set {
      opttext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Story0Opt" field.</summary>
  public const int Story0OptFieldNumber = 40;
  private string story0Opt_ = "";
  /// <summary>
  ///Story0Opt===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Story0Opt {
    get { return story0Opt_; }
    set {
      story0Opt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Story0Jump" field.</summary>
  public const int Story0JumpFieldNumber = 41;
  private int story0Jump_;
  /// <summary>
  ///Story0Jump===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Story0Jump {
    get { return story0Jump_; }
    set {
      story0Jump_ = value;
    }
  }

  /// <summary>Field number for the "Story0Good" field.</summary>
  public const int Story0GoodFieldNumber = 42;
  private int story0Good_;
  /// <summary>
  ///Story0Good===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Story0Good {
    get { return story0Good_; }
    set {
      story0Good_ = value;
    }
  }

  /// <summary>Field number for the "Story1OptInfo" field.</summary>
  public const int Story1OptInfoFieldNumber = 43;
  private static readonly pb::FieldCodec<global::StoryStory1OptInfo> _repeated_story1OptInfo_codec
      = pb::FieldCodec.ForMessage(346, global::StoryStory1OptInfo.Parser);
  private readonly pbc::RepeatedField<global::StoryStory1OptInfo> story1OptInfo_ = new pbc::RepeatedField<global::StoryStory1OptInfo>();
  /// <summary>
  ///Story1OptInfo===>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StoryStory1OptInfo> Story1OptInfo {
    get { return story1OptInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StoryConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StoryConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ID != other.ID) return false;
    if (Desc != other.Desc) return false;
    if (Talk0Id != other.Talk0Id) return false;
    if (Talk1Id != other.Talk1Id) return false;
    if (Talk2Id != other.Talk2Id) return false;
    if (Talk3Id != other.Talk3Id) return false;
    if (Talk4Id != other.Talk4Id) return false;
    if (Talk5Id != other.Talk5Id) return false;
    if (Talk6Id != other.Talk6Id) return false;
    if (Talk7Id != other.Talk7Id) return false;
    if (Talk8Id != other.Talk8Id) return false;
    if (Talk9Id != other.Talk9Id) return false;
    if (Talk10Id != other.Talk10Id) return false;
    if (Talk11Id != other.Talk11Id) return false;
    if (Talk12Id != other.Talk12Id) return false;
    if (Talk13Id != other.Talk13Id) return false;
    if (Talk14Id != other.Talk14Id) return false;
    if (Talk15Id != other.Talk15Id) return false;
    if (Talk16Id != other.Talk16Id) return false;
    if (Talk17Id != other.Talk17Id) return false;
    if (Talk18Id != other.Talk18Id) return false;
    if (Talk19Id != other.Talk19Id) return false;
    if (Talk20Id != other.Talk20Id) return false;
    if (Talk21Id != other.Talk21Id) return false;
    if (Talk22Id != other.Talk22Id) return false;
    if (Talk23Id != other.Talk23Id) return false;
    if (Talk24Id != other.Talk24Id) return false;
    if (Talk25Id != other.Talk25Id) return false;
    if (Talk26Id != other.Talk26Id) return false;
    if (Talk27Id != other.Talk27Id) return false;
    if (Talk28Id != other.Talk28Id) return false;
    if (Talk29Id != other.Talk29Id) return false;
    if (Talk30Id != other.Talk30Id) return false;
    if (Talk31Id != other.Talk31Id) return false;
    if (Talk32Id != other.Talk32Id) return false;
    if (Talk33Id != other.Talk33Id) return false;
    if (Talk34Id != other.Talk34Id) return false;
    if (Opttype != other.Opttype) return false;
    if (Opttext != other.Opttext) return false;
    if (Story0Opt != other.Story0Opt) return false;
    if (Story0Jump != other.Story0Jump) return false;
    if (Story0Good != other.Story0Good) return false;
    if(!story1OptInfo_.Equals(other.story1OptInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ID != 0) hash ^= ID.GetHashCode();
    if (Desc.Length != 0) hash ^= Desc.GetHashCode();
    if (Talk0Id != 0) hash ^= Talk0Id.GetHashCode();
    if (Talk1Id != 0) hash ^= Talk1Id.GetHashCode();
    if (Talk2Id != 0) hash ^= Talk2Id.GetHashCode();
    if (Talk3Id != 0) hash ^= Talk3Id.GetHashCode();
    if (Talk4Id != 0) hash ^= Talk4Id.GetHashCode();
    if (Talk5Id != 0) hash ^= Talk5Id.GetHashCode();
    if (Talk6Id != 0) hash ^= Talk6Id.GetHashCode();
    if (Talk7Id != 0) hash ^= Talk7Id.GetHashCode();
    if (Talk8Id != 0) hash ^= Talk8Id.GetHashCode();
    if (Talk9Id != 0) hash ^= Talk9Id.GetHashCode();
    if (Talk10Id != 0) hash ^= Talk10Id.GetHashCode();
    if (Talk11Id != 0) hash ^= Talk11Id.GetHashCode();
    if (Talk12Id != 0) hash ^= Talk12Id.GetHashCode();
    if (Talk13Id != 0) hash ^= Talk13Id.GetHashCode();
    if (Talk14Id != 0) hash ^= Talk14Id.GetHashCode();
    if (Talk15Id != 0) hash ^= Talk15Id.GetHashCode();
    if (Talk16Id != 0) hash ^= Talk16Id.GetHashCode();
    if (Talk17Id != 0) hash ^= Talk17Id.GetHashCode();
    if (Talk18Id != 0) hash ^= Talk18Id.GetHashCode();
    if (Talk19Id != 0) hash ^= Talk19Id.GetHashCode();
    if (Talk20Id != 0) hash ^= Talk20Id.GetHashCode();
    if (Talk21Id != 0) hash ^= Talk21Id.GetHashCode();
    if (Talk22Id != 0) hash ^= Talk22Id.GetHashCode();
    if (Talk23Id != 0) hash ^= Talk23Id.GetHashCode();
    if (Talk24Id != 0) hash ^= Talk24Id.GetHashCode();
    if (Talk25Id != 0) hash ^= Talk25Id.GetHashCode();
    if (Talk26Id != 0) hash ^= Talk26Id.GetHashCode();
    if (Talk27Id != 0) hash ^= Talk27Id.GetHashCode();
    if (Talk28Id != 0) hash ^= Talk28Id.GetHashCode();
    if (Talk29Id != 0) hash ^= Talk29Id.GetHashCode();
    if (Talk30Id != 0) hash ^= Talk30Id.GetHashCode();
    if (Talk31Id != 0) hash ^= Talk31Id.GetHashCode();
    if (Talk32Id != 0) hash ^= Talk32Id.GetHashCode();
    if (Talk33Id != 0) hash ^= Talk33Id.GetHashCode();
    if (Talk34Id != 0) hash ^= Talk34Id.GetHashCode();
    if (Opttype != 0) hash ^= Opttype.GetHashCode();
    if (Opttext.Length != 0) hash ^= Opttext.GetHashCode();
    if (Story0Opt.Length != 0) hash ^= Story0Opt.GetHashCode();
    if (Story0Jump != 0) hash ^= Story0Jump.GetHashCode();
    if (Story0Good != 0) hash ^= Story0Good.GetHashCode();
    hash ^= story1OptInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ID);
    }
    if (Desc.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Desc);
    }
    if (Talk0Id != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Talk0Id);
    }
    if (Talk1Id != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Talk1Id);
    }
    if (Talk2Id != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Talk2Id);
    }
    if (Talk3Id != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Talk3Id);
    }
    if (Talk4Id != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Talk4Id);
    }
    if (Talk5Id != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Talk5Id);
    }
    if (Talk6Id != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Talk6Id);
    }
    if (Talk7Id != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(Talk7Id);
    }
    if (Talk8Id != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(Talk8Id);
    }
    if (Talk9Id != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(Talk9Id);
    }
    if (Talk10Id != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Talk10Id);
    }
    if (Talk11Id != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(Talk11Id);
    }
    if (Talk12Id != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(Talk12Id);
    }
    if (Talk13Id != 0) {
      output.WriteRawTag(128, 1);
      output.WriteInt32(Talk13Id);
    }
    if (Talk14Id != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(Talk14Id);
    }
    if (Talk15Id != 0) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(Talk15Id);
    }
    if (Talk16Id != 0) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(Talk16Id);
    }
    if (Talk17Id != 0) {
      output.WriteRawTag(160, 1);
      output.WriteInt32(Talk17Id);
    }
    if (Talk18Id != 0) {
      output.WriteRawTag(168, 1);
      output.WriteInt32(Talk18Id);
    }
    if (Talk19Id != 0) {
      output.WriteRawTag(176, 1);
      output.WriteInt32(Talk19Id);
    }
    if (Talk20Id != 0) {
      output.WriteRawTag(184, 1);
      output.WriteInt32(Talk20Id);
    }
    if (Talk21Id != 0) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(Talk21Id);
    }
    if (Talk22Id != 0) {
      output.WriteRawTag(200, 1);
      output.WriteInt32(Talk22Id);
    }
    if (Talk23Id != 0) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(Talk23Id);
    }
    if (Talk24Id != 0) {
      output.WriteRawTag(216, 1);
      output.WriteInt32(Talk24Id);
    }
    if (Talk25Id != 0) {
      output.WriteRawTag(224, 1);
      output.WriteInt32(Talk25Id);
    }
    if (Talk26Id != 0) {
      output.WriteRawTag(232, 1);
      output.WriteInt32(Talk26Id);
    }
    if (Talk27Id != 0) {
      output.WriteRawTag(240, 1);
      output.WriteInt32(Talk27Id);
    }
    if (Talk28Id != 0) {
      output.WriteRawTag(248, 1);
      output.WriteInt32(Talk28Id);
    }
    if (Talk29Id != 0) {
      output.WriteRawTag(128, 2);
      output.WriteInt32(Talk29Id);
    }
    if (Talk30Id != 0) {
      output.WriteRawTag(136, 2);
      output.WriteInt32(Talk30Id);
    }
    if (Talk31Id != 0) {
      output.WriteRawTag(144, 2);
      output.WriteInt32(Talk31Id);
    }
    if (Talk32Id != 0) {
      output.WriteRawTag(152, 2);
      output.WriteInt32(Talk32Id);
    }
    if (Talk33Id != 0) {
      output.WriteRawTag(160, 2);
      output.WriteInt32(Talk33Id);
    }
    if (Talk34Id != 0) {
      output.WriteRawTag(168, 2);
      output.WriteInt32(Talk34Id);
    }
    if (Opttype != 0) {
      output.WriteRawTag(176, 2);
      output.WriteInt32(Opttype);
    }
    if (Opttext.Length != 0) {
      output.WriteRawTag(186, 2);
      output.WriteString(Opttext);
    }
    if (Story0Opt.Length != 0) {
      output.WriteRawTag(194, 2);
      output.WriteString(Story0Opt);
    }
    if (Story0Jump != 0) {
      output.WriteRawTag(200, 2);
      output.WriteInt32(Story0Jump);
    }
    if (Story0Good != 0) {
      output.WriteRawTag(208, 2);
      output.WriteInt32(Story0Good);
    }
    story1OptInfo_.WriteTo(output, _repeated_story1OptInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
    }
    if (Desc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
    }
    if (Talk0Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk0Id);
    }
    if (Talk1Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk1Id);
    }
    if (Talk2Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk2Id);
    }
    if (Talk3Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk3Id);
    }
    if (Talk4Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk4Id);
    }
    if (Talk5Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk5Id);
    }
    if (Talk6Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk6Id);
    }
    if (Talk7Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk7Id);
    }
    if (Talk8Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk8Id);
    }
    if (Talk9Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk9Id);
    }
    if (Talk10Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk10Id);
    }
    if (Talk11Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk11Id);
    }
    if (Talk12Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Talk12Id);
    }
    if (Talk13Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk13Id);
    }
    if (Talk14Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk14Id);
    }
    if (Talk15Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk15Id);
    }
    if (Talk16Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk16Id);
    }
    if (Talk17Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk17Id);
    }
    if (Talk18Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk18Id);
    }
    if (Talk19Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk19Id);
    }
    if (Talk20Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk20Id);
    }
    if (Talk21Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk21Id);
    }
    if (Talk22Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk22Id);
    }
    if (Talk23Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk23Id);
    }
    if (Talk24Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk24Id);
    }
    if (Talk25Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk25Id);
    }
    if (Talk26Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk26Id);
    }
    if (Talk27Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk27Id);
    }
    if (Talk28Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk28Id);
    }
    if (Talk29Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk29Id);
    }
    if (Talk30Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk30Id);
    }
    if (Talk31Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk31Id);
    }
    if (Talk32Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk32Id);
    }
    if (Talk33Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk33Id);
    }
    if (Talk34Id != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Talk34Id);
    }
    if (Opttype != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Opttype);
    }
    if (Opttext.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Opttext);
    }
    if (Story0Opt.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Story0Opt);
    }
    if (Story0Jump != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Story0Jump);
    }
    if (Story0Good != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Story0Good);
    }
    size += story1OptInfo_.CalculateSize(_repeated_story1OptInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StoryConfig other) {
    if (other == null) {
      return;
    }
    if (other.ID != 0) {
      ID = other.ID;
    }
    if (other.Desc.Length != 0) {
      Desc = other.Desc;
    }
    if (other.Talk0Id != 0) {
      Talk0Id = other.Talk0Id;
    }
    if (other.Talk1Id != 0) {
      Talk1Id = other.Talk1Id;
    }
    if (other.Talk2Id != 0) {
      Talk2Id = other.Talk2Id;
    }
    if (other.Talk3Id != 0) {
      Talk3Id = other.Talk3Id;
    }
    if (other.Talk4Id != 0) {
      Talk4Id = other.Talk4Id;
    }
    if (other.Talk5Id != 0) {
      Talk5Id = other.Talk5Id;
    }
    if (other.Talk6Id != 0) {
      Talk6Id = other.Talk6Id;
    }
    if (other.Talk7Id != 0) {
      Talk7Id = other.Talk7Id;
    }
    if (other.Talk8Id != 0) {
      Talk8Id = other.Talk8Id;
    }
    if (other.Talk9Id != 0) {
      Talk9Id = other.Talk9Id;
    }
    if (other.Talk10Id != 0) {
      Talk10Id = other.Talk10Id;
    }
    if (other.Talk11Id != 0) {
      Talk11Id = other.Talk11Id;
    }
    if (other.Talk12Id != 0) {
      Talk12Id = other.Talk12Id;
    }
    if (other.Talk13Id != 0) {
      Talk13Id = other.Talk13Id;
    }
    if (other.Talk14Id != 0) {
      Talk14Id = other.Talk14Id;
    }
    if (other.Talk15Id != 0) {
      Talk15Id = other.Talk15Id;
    }
    if (other.Talk16Id != 0) {
      Talk16Id = other.Talk16Id;
    }
    if (other.Talk17Id != 0) {
      Talk17Id = other.Talk17Id;
    }
    if (other.Talk18Id != 0) {
      Talk18Id = other.Talk18Id;
    }
    if (other.Talk19Id != 0) {
      Talk19Id = other.Talk19Id;
    }
    if (other.Talk20Id != 0) {
      Talk20Id = other.Talk20Id;
    }
    if (other.Talk21Id != 0) {
      Talk21Id = other.Talk21Id;
    }
    if (other.Talk22Id != 0) {
      Talk22Id = other.Talk22Id;
    }
    if (other.Talk23Id != 0) {
      Talk23Id = other.Talk23Id;
    }
    if (other.Talk24Id != 0) {
      Talk24Id = other.Talk24Id;
    }
    if (other.Talk25Id != 0) {
      Talk25Id = other.Talk25Id;
    }
    if (other.Talk26Id != 0) {
      Talk26Id = other.Talk26Id;
    }
    if (other.Talk27Id != 0) {
      Talk27Id = other.Talk27Id;
    }
    if (other.Talk28Id != 0) {
      Talk28Id = other.Talk28Id;
    }
    if (other.Talk29Id != 0) {
      Talk29Id = other.Talk29Id;
    }
    if (other.Talk30Id != 0) {
      Talk30Id = other.Talk30Id;
    }
    if (other.Talk31Id != 0) {
      Talk31Id = other.Talk31Id;
    }
    if (other.Talk32Id != 0) {
      Talk32Id = other.Talk32Id;
    }
    if (other.Talk33Id != 0) {
      Talk33Id = other.Talk33Id;
    }
    if (other.Talk34Id != 0) {
      Talk34Id = other.Talk34Id;
    }
    if (other.Opttype != 0) {
      Opttype = other.Opttype;
    }
    if (other.Opttext.Length != 0) {
      Opttext = other.Opttext;
    }
    if (other.Story0Opt.Length != 0) {
      Story0Opt = other.Story0Opt;
    }
    if (other.Story0Jump != 0) {
      Story0Jump = other.Story0Jump;
    }
    if (other.Story0Good != 0) {
      Story0Good = other.Story0Good;
    }
    story1OptInfo_.Add(other.story1OptInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ID = input.ReadInt32();
          break;
        }
        case 18: {
          Desc = input.ReadString();
          break;
        }
        case 24: {
          Talk0Id = input.ReadInt32();
          break;
        }
        case 32: {
          Talk1Id = input.ReadInt32();
          break;
        }
        case 40: {
          Talk2Id = input.ReadInt32();
          break;
        }
        case 48: {
          Talk3Id = input.ReadInt32();
          break;
        }
        case 56: {
          Talk4Id = input.ReadInt32();
          break;
        }
        case 64: {
          Talk5Id = input.ReadInt32();
          break;
        }
        case 72: {
          Talk6Id = input.ReadInt32();
          break;
        }
        case 80: {
          Talk7Id = input.ReadInt32();
          break;
        }
        case 88: {
          Talk8Id = input.ReadInt32();
          break;
        }
        case 96: {
          Talk9Id = input.ReadInt32();
          break;
        }
        case 104: {
          Talk10Id = input.ReadInt32();
          break;
        }
        case 112: {
          Talk11Id = input.ReadInt32();
          break;
        }
        case 120: {
          Talk12Id = input.ReadInt32();
          break;
        }
        case 128: {
          Talk13Id = input.ReadInt32();
          break;
        }
        case 136: {
          Talk14Id = input.ReadInt32();
          break;
        }
        case 144: {
          Talk15Id = input.ReadInt32();
          break;
        }
        case 152: {
          Talk16Id = input.ReadInt32();
          break;
        }
        case 160: {
          Talk17Id = input.ReadInt32();
          break;
        }
        case 168: {
          Talk18Id = input.ReadInt32();
          break;
        }
        case 176: {
          Talk19Id = input.ReadInt32();
          break;
        }
        case 184: {
          Talk20Id = input.ReadInt32();
          break;
        }
        case 192: {
          Talk21Id = input.ReadInt32();
          break;
        }
        case 200: {
          Talk22Id = input.ReadInt32();
          break;
        }
        case 208: {
          Talk23Id = input.ReadInt32();
          break;
        }
        case 216: {
          Talk24Id = input.ReadInt32();
          break;
        }
        case 224: {
          Talk25Id = input.ReadInt32();
          break;
        }
        case 232: {
          Talk26Id = input.ReadInt32();
          break;
        }
        case 240: {
          Talk27Id = input.ReadInt32();
          break;
        }
        case 248: {
          Talk28Id = input.ReadInt32();
          break;
        }
        case 256: {
          Talk29Id = input.ReadInt32();
          break;
        }
        case 264: {
          Talk30Id = input.ReadInt32();
          break;
        }
        case 272: {
          Talk31Id = input.ReadInt32();
          break;
        }
        case 280: {
          Talk32Id = input.ReadInt32();
          break;
        }
        case 288: {
          Talk33Id = input.ReadInt32();
          break;
        }
        case 296: {
          Talk34Id = input.ReadInt32();
          break;
        }
        case 304: {
          Opttype = input.ReadInt32();
          break;
        }
        case 314: {
          Opttext = input.ReadString();
          break;
        }
        case 322: {
          Story0Opt = input.ReadString();
          break;
        }
        case 328: {
          Story0Jump = input.ReadInt32();
          break;
        }
        case 336: {
          Story0Good = input.ReadInt32();
          break;
        }
        case 346: {
          story1OptInfo_.AddEntriesFrom(input, _repeated_story1OptInfo_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class StoryStory1OptInfo : pb::IMessage<StoryStory1OptInfo> {
  private static readonly pb::MessageParser<StoryStory1OptInfo> _parser = new pb::MessageParser<StoryStory1OptInfo>(() => new StoryStory1OptInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StoryStory1OptInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StoryConfigReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryStory1OptInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryStory1OptInfo(StoryStory1OptInfo other) : this() {
    story1Opt1_ = other.story1Opt1_;
    story1Opt2_ = other.story1Opt2_;
    story1Opt3_ = other.story1Opt3_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StoryStory1OptInfo Clone() {
    return new StoryStory1OptInfo(this);
  }

  /// <summary>Field number for the "story1opt1" field.</summary>
  public const int Story1Opt1FieldNumber = 1;
  private string story1Opt1_ = "";
  /// <summary>
  ///story1opt1===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Story1Opt1 {
    get { return story1Opt1_; }
    set {
      story1Opt1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "story1opt2" field.</summary>
  public const int Story1Opt2FieldNumber = 2;
  private int story1Opt2_;
  /// <summary>
  ///story1opt2===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Story1Opt2 {
    get { return story1Opt2_; }
    set {
      story1Opt2_ = value;
    }
  }

  /// <summary>Field number for the "story1opt3" field.</summary>
  public const int Story1Opt3FieldNumber = 3;
  private int story1Opt3_;
  /// <summary>
  ///story1opt3===>ohh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Story1Opt3 {
    get { return story1Opt3_; }
    set {
      story1Opt3_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StoryStory1OptInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StoryStory1OptInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Story1Opt1 != other.Story1Opt1) return false;
    if (Story1Opt2 != other.Story1Opt2) return false;
    if (Story1Opt3 != other.Story1Opt3) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Story1Opt1.Length != 0) hash ^= Story1Opt1.GetHashCode();
    if (Story1Opt2 != 0) hash ^= Story1Opt2.GetHashCode();
    if (Story1Opt3 != 0) hash ^= Story1Opt3.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Story1Opt1.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Story1Opt1);
    }
    if (Story1Opt2 != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Story1Opt2);
    }
    if (Story1Opt3 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Story1Opt3);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Story1Opt1.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Story1Opt1);
    }
    if (Story1Opt2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Story1Opt2);
    }
    if (Story1Opt3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Story1Opt3);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StoryStory1OptInfo other) {
    if (other == null) {
      return;
    }
    if (other.Story1Opt1.Length != 0) {
      Story1Opt1 = other.Story1Opt1;
    }
    if (other.Story1Opt2 != 0) {
      Story1Opt2 = other.Story1Opt2;
    }
    if (other.Story1Opt3 != 0) {
      Story1Opt3 = other.Story1Opt3;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Story1Opt1 = input.ReadString();
          break;
        }
        case 16: {
          Story1Opt2 = input.ReadInt32();
          break;
        }
        case 24: {
          Story1Opt3 = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
