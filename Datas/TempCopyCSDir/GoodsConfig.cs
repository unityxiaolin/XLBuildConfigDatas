// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GoodsConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GoodsConfig.proto</summary>
public static partial class GoodsConfigReflection {

  #region Descriptor
  /// <summary>File descriptor for GoodsConfig.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GoodsConfigReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFHb29kc0NvbmZpZy5wcm90byIuChBHb29kc0NvbmZpZ0RhdGFzEhoKBEJh",
          "c2UYASADKAsyDC5Hb29kc0NvbmZpZyLCBQoLR29vZHNDb25maWcSDgoGSXRl",
          "bUlEGAEgASgFEgwKBE5hbWUYAiABKAkSDwoHUXVhbGl0eRgDIAEoBRITCgtJ",
          "Y29uTmFtZU1hbhgEIAEoCRIVCg1JY29uTmFtZVdvbWVuGAUgASgJEhAKCEl0",
          "ZW1UeXBlGAYgASgFEhAKCEZ1bmNEZXNjGAcgASgJEgwKBERlc2MYCCABKAkS",
          "EAoITWF4U3RhY2sYCSABKAUSEAoISXRlbVNvcnQYCiABKAUSEAoIU2VsbEdv",
          "bGQYCyABKAUSEAoIVXNlTGV2ZWwYDCABKAUSEgoKR2V0QXVkaW9JRBgNIAEo",
          "BRISCgpVc2VBdWRpb0lEGA4gASgFEhEKCVZhbGlkVHlwZRgPIAEoBRIRCglW",
          "YWxpZFRpbWUYECABKAUSEwoLQ29tcG9zZURlc2MYESABKAkSEwoLQ2Fub3RV",
          "c2VUaXAYEiABKAkSEgoKRnVuY1ZhbHVleBgTIAEoBRINCgVGdW5jMRgUIAEo",
          "BRINCgVGdW5jMhgVIAEoBRINCgVGdW5jMxgWIAEoBRIaChJEZWNvbXBvc2VN",
          "b25leVR5cGUYFyABKAUSGQoRRGVjb21wb3NlTW9uZXlDbnQYGCABKAUSDwoH",
          "R2V0RGVzYxgZIAEoCRIPCgdBdXRvVXNlGBogASgFEhcKD0FjdGl2ZUZhc2hp",
          "b25JRBgbIAEoBRIUCgxDYW5TZWxlY3RCb3gYHCABKAUSDwoHQ2FuU2VsbBgd",
          "IAEoBRISCgpDYW5Db21wb3NlGB4gASgFEhMKC0dldFdheUxpc3QxGB8gASgF",
          "EhMKC0dldFdheUxpc3QyGCAgASgFEhMKC0dldFdheUxpc3QzGCEgASgFEhMK",
          "C0dldFdheUxpc3Q0GCIgASgFEhQKDFVzZUp1bXBQYW5lbBgjIAEoBRIOCgZQ",
          "aW5qaWUYJCABKAViBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GoodsConfigDatas), global::GoodsConfigDatas.Parser, new[]{ "Base" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoodsConfig), global::GoodsConfig.Parser, new[]{ "ItemID", "Name", "Quality", "IconNameMan", "IconNameWomen", "ItemType", "FuncDesc", "Desc", "MaxStack", "ItemSort", "SellGold", "UseLevel", "GetAudioID", "UseAudioID", "ValidType", "ValidTime", "ComposeDesc", "CanotUseTip", "FuncValuex", "Func1", "Func2", "Func3", "DecomposeMoneyType", "DecomposeMoneyCnt", "GetDesc", "AutoUse", "ActiveFashionID", "CanSelectBox", "CanSell", "CanCompose", "GetWayList1", "GetWayList2", "GetWayList3", "GetWayList4", "UseJumpPanel", "Pinjie" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GoodsConfigDatas : pb::IMessage<GoodsConfigDatas> {
  private static readonly pb::MessageParser<GoodsConfigDatas> _parser = new pb::MessageParser<GoodsConfigDatas>(() => new GoodsConfigDatas());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoodsConfigDatas> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GoodsConfigReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfigDatas() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfigDatas(GoodsConfigDatas other) : this() {
    base_ = other.base_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfigDatas Clone() {
    return new GoodsConfigDatas(this);
  }

  /// <summary>Field number for the "Base" field.</summary>
  public const int BaseFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GoodsConfig> _repeated_base_codec
      = pb::FieldCodec.ForMessage(10, global::GoodsConfig.Parser);
  private readonly pbc::RepeatedField<global::GoodsConfig> base_ = new pbc::RepeatedField<global::GoodsConfig>();
  /// <summary>
  ///Base===>GoodsConfig类的数组列表类
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GoodsConfig> Base {
    get { return base_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoodsConfigDatas);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoodsConfigDatas other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!base_.Equals(other.base_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= base_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    base_.WriteTo(output, _repeated_base_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += base_.CalculateSize(_repeated_base_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoodsConfigDatas other) {
    if (other == null) {
      return;
    }
    base_.Add(other.base_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          base_.AddEntriesFrom(input, _repeated_base_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GoodsConfig : pb::IMessage<GoodsConfig> {
  private static readonly pb::MessageParser<GoodsConfig> _parser = new pb::MessageParser<GoodsConfig>(() => new GoodsConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoodsConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GoodsConfigReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfig(GoodsConfig other) : this() {
    itemID_ = other.itemID_;
    name_ = other.name_;
    quality_ = other.quality_;
    iconNameMan_ = other.iconNameMan_;
    iconNameWomen_ = other.iconNameWomen_;
    itemType_ = other.itemType_;
    funcDesc_ = other.funcDesc_;
    desc_ = other.desc_;
    maxStack_ = other.maxStack_;
    itemSort_ = other.itemSort_;
    sellGold_ = other.sellGold_;
    useLevel_ = other.useLevel_;
    getAudioID_ = other.getAudioID_;
    useAudioID_ = other.useAudioID_;
    validType_ = other.validType_;
    validTime_ = other.validTime_;
    composeDesc_ = other.composeDesc_;
    canotUseTip_ = other.canotUseTip_;
    funcValuex_ = other.funcValuex_;
    func1_ = other.func1_;
    func2_ = other.func2_;
    func3_ = other.func3_;
    decomposeMoneyType_ = other.decomposeMoneyType_;
    decomposeMoneyCnt_ = other.decomposeMoneyCnt_;
    getDesc_ = other.getDesc_;
    autoUse_ = other.autoUse_;
    activeFashionID_ = other.activeFashionID_;
    canSelectBox_ = other.canSelectBox_;
    canSell_ = other.canSell_;
    canCompose_ = other.canCompose_;
    getWayList1_ = other.getWayList1_;
    getWayList2_ = other.getWayList2_;
    getWayList3_ = other.getWayList3_;
    getWayList4_ = other.getWayList4_;
    useJumpPanel_ = other.useJumpPanel_;
    pinjie_ = other.pinjie_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoodsConfig Clone() {
    return new GoodsConfig(this);
  }

  /// <summary>Field number for the "ItemID" field.</summary>
  public const int ItemIDFieldNumber = 1;
  private int itemID_;
  /// <summary>
  ///ItemID===>道具ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemID {
    get { return itemID_; }
    set {
      itemID_ = value;
    }
  }

  /// <summary>Field number for the "Name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  /// <summary>
  ///Name===>道具名称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Quality" field.</summary>
  public const int QualityFieldNumber = 3;
  private int quality_;
  /// <summary>
  ///Quality===>道具品质
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Quality {
    get { return quality_; }
    set {
      quality_ = value;
    }
  }

  /// <summary>Field number for the "IconNameMan" field.</summary>
  public const int IconNameManFieldNumber = 4;
  private string iconNameMan_ = "";
  /// <summary>
  ///IconNameMan===>图标资源名称_男性
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string IconNameMan {
    get { return iconNameMan_; }
    set {
      iconNameMan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "IconNameWomen" field.</summary>
  public const int IconNameWomenFieldNumber = 5;
  private string iconNameWomen_ = "";
  /// <summary>
  ///IconNameWomen===>图标资源名称_女性
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string IconNameWomen {
    get { return iconNameWomen_; }
    set {
      iconNameWomen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ItemType" field.</summary>
  public const int ItemTypeFieldNumber = 6;
  private int itemType_;
  /// <summary>
  ///ItemType===>道具类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemType {
    get { return itemType_; }
    set {
      itemType_ = value;
    }
  }

  /// <summary>Field number for the "FuncDesc" field.</summary>
  public const int FuncDescFieldNumber = 7;
  private string funcDesc_ = "";
  /// <summary>
  ///FuncDesc===>功能描述
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FuncDesc {
    get { return funcDesc_; }
    set {
      funcDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Desc" field.</summary>
  public const int DescFieldNumber = 8;
  private string desc_ = "";
  /// <summary>
  ///Desc===>文学描述
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Desc {
    get { return desc_; }
    set {
      desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MaxStack" field.</summary>
  public const int MaxStackFieldNumber = 9;
  private int maxStack_;
  /// <summary>
  ///MaxStack===>最大叠加数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxStack {
    get { return maxStack_; }
    set {
      maxStack_ = value;
    }
  }

  /// <summary>Field number for the "ItemSort" field.</summary>
  public const int ItemSortFieldNumber = 10;
  private int itemSort_;
  /// <summary>
  ///ItemSort===>道具排列顺序
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemSort {
    get { return itemSort_; }
    set {
      itemSort_ = value;
    }
  }

  /// <summary>Field number for the "SellGold" field.</summary>
  public const int SellGoldFieldNumber = 11;
  private int sellGold_;
  /// <summary>
  ///SellGold===>售出金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SellGold {
    get { return sellGold_; }
    set {
      sellGold_ = value;
    }
  }

  /// <summary>Field number for the "UseLevel" field.</summary>
  public const int UseLevelFieldNumber = 12;
  private int useLevel_;
  /// <summary>
  ///UseLevel===>使用等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UseLevel {
    get { return useLevel_; }
    set {
      useLevel_ = value;
    }
  }

  /// <summary>Field number for the "GetAudioID" field.</summary>
  public const int GetAudioIDFieldNumber = 13;
  private int getAudioID_;
  /// <summary>
  ///GetAudioID===>获得音效ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GetAudioID {
    get { return getAudioID_; }
    set {
      getAudioID_ = value;
    }
  }

  /// <summary>Field number for the "UseAudioID" field.</summary>
  public const int UseAudioIDFieldNumber = 14;
  private int useAudioID_;
  /// <summary>
  ///UseAudioID===>使用音效ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UseAudioID {
    get { return useAudioID_; }
    set {
      useAudioID_ = value;
    }
  }

  /// <summary>Field number for the "ValidType" field.</summary>
  public const int ValidTypeFieldNumber = 15;
  private int validType_;
  /// <summary>
  ///ValidType===>时效类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ValidType {
    get { return validType_; }
    set {
      validType_ = value;
    }
  }

  /// <summary>Field number for the "ValidTime" field.</summary>
  public const int ValidTimeFieldNumber = 16;
  private int validTime_;
  /// <summary>
  ///ValidTime===>时效时长
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ValidTime {
    get { return validTime_; }
    set {
      validTime_ = value;
    }
  }

  /// <summary>Field number for the "ComposeDesc" field.</summary>
  public const int ComposeDescFieldNumber = 17;
  private string composeDesc_ = "";
  /// <summary>
  ///ComposeDesc===>合成描述
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ComposeDesc {
    get { return composeDesc_; }
    set {
      composeDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CanotUseTip" field.</summary>
  public const int CanotUseTipFieldNumber = 18;
  private string canotUseTip_ = "";
  /// <summary>
  ///CanotUseTip===>不可使用提示
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CanotUseTip {
    get { return canotUseTip_; }
    set {
      canotUseTip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "FuncValuex" field.</summary>
  public const int FuncValuexFieldNumber = 19;
  private int funcValuex_;
  /// <summary>
  ///FuncValuex===>功能值_类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FuncValuex {
    get { return funcValuex_; }
    set {
      funcValuex_ = value;
    }
  }

  /// <summary>Field number for the "Func1" field.</summary>
  public const int Func1FieldNumber = 20;
  private int func1_;
  /// <summary>
  ///Func1===>功能值_参数_1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Func1 {
    get { return func1_; }
    set {
      func1_ = value;
    }
  }

  /// <summary>Field number for the "Func2" field.</summary>
  public const int Func2FieldNumber = 21;
  private int func2_;
  /// <summary>
  ///Func2===>功能值_参数_2
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Func2 {
    get { return func2_; }
    set {
      func2_ = value;
    }
  }

  /// <summary>Field number for the "Func3" field.</summary>
  public const int Func3FieldNumber = 22;
  private int func3_;
  /// <summary>
  ///Func3===>功能值_参数_3
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Func3 {
    get { return func3_; }
    set {
      func3_ = value;
    }
  }

  /// <summary>Field number for the "DecomposeMoneyType" field.</summary>
  public const int DecomposeMoneyTypeFieldNumber = 23;
  private int decomposeMoneyType_;
  /// <summary>
  ///DecomposeMoneyType===>分解获得货币类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DecomposeMoneyType {
    get { return decomposeMoneyType_; }
    set {
      decomposeMoneyType_ = value;
    }
  }

  /// <summary>Field number for the "DecomposeMoneyCnt" field.</summary>
  public const int DecomposeMoneyCntFieldNumber = 24;
  private int decomposeMoneyCnt_;
  /// <summary>
  ///DecomposeMoneyCnt===>分解获得货币数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DecomposeMoneyCnt {
    get { return decomposeMoneyCnt_; }
    set {
      decomposeMoneyCnt_ = value;
    }
  }

  /// <summary>Field number for the "GetDesc" field.</summary>
  public const int GetDescFieldNumber = 25;
  private string getDesc_ = "";
  /// <summary>
  ///GetDesc===>获得说明
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GetDesc {
    get { return getDesc_; }
    set {
      getDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "AutoUse" field.</summary>
  public const int AutoUseFieldNumber = 26;
  private int autoUse_;
  /// <summary>
  ///AutoUse===>获得是否自动使用
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AutoUse {
    get { return autoUse_; }
    set {
      autoUse_ = value;
    }
  }

  /// <summary>Field number for the "ActiveFashionID" field.</summary>
  public const int ActiveFashionIDFieldNumber = 27;
  private int activeFashionID_;
  /// <summary>
  ///ActiveFashionID===>可激活的时装ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveFashionID {
    get { return activeFashionID_; }
    set {
      activeFashionID_ = value;
    }
  }

  /// <summary>Field number for the "CanSelectBox" field.</summary>
  public const int CanSelectBoxFieldNumber = 28;
  private int canSelectBox_;
  /// <summary>
  ///CanSelectBox===>是否选择宝箱
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CanSelectBox {
    get { return canSelectBox_; }
    set {
      canSelectBox_ = value;
    }
  }

  /// <summary>Field number for the "CanSell" field.</summary>
  public const int CanSellFieldNumber = 29;
  private int canSell_;
  /// <summary>
  ///CanSell===>可否出售
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CanSell {
    get { return canSell_; }
    set {
      canSell_ = value;
    }
  }

  /// <summary>Field number for the "CanCompose" field.</summary>
  public const int CanComposeFieldNumber = 30;
  private int canCompose_;
  /// <summary>
  ///CanCompose===>可否合成
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CanCompose {
    get { return canCompose_; }
    set {
      canCompose_ = value;
    }
  }

  /// <summary>Field number for the "GetWayList1" field.</summary>
  public const int GetWayList1FieldNumber = 31;
  private int getWayList1_;
  /// <summary>
  ///GetWayList1===>获取途径_1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GetWayList1 {
    get { return getWayList1_; }
    set {
      getWayList1_ = value;
    }
  }

  /// <summary>Field number for the "GetWayList2" field.</summary>
  public const int GetWayList2FieldNumber = 32;
  private int getWayList2_;
  /// <summary>
  ///GetWayList2===>获取途径_2
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GetWayList2 {
    get { return getWayList2_; }
    set {
      getWayList2_ = value;
    }
  }

  /// <summary>Field number for the "GetWayList3" field.</summary>
  public const int GetWayList3FieldNumber = 33;
  private int getWayList3_;
  /// <summary>
  ///GetWayList3===>获取途径_3
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GetWayList3 {
    get { return getWayList3_; }
    set {
      getWayList3_ = value;
    }
  }

  /// <summary>Field number for the "GetWayList4" field.</summary>
  public const int GetWayList4FieldNumber = 34;
  private int getWayList4_;
  /// <summary>
  ///GetWayList4===>获取途径_4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GetWayList4 {
    get { return getWayList4_; }
    set {
      getWayList4_ = value;
    }
  }

  /// <summary>Field number for the "UseJumpPanel" field.</summary>
  public const int UseJumpPanelFieldNumber = 35;
  private int useJumpPanel_;
  /// <summary>
  ///UseJumpPanel===>使用跳转
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UseJumpPanel {
    get { return useJumpPanel_; }
    set {
      useJumpPanel_ = value;
    }
  }

  /// <summary>Field number for the "Pinjie" field.</summary>
  public const int PinjieFieldNumber = 36;
  private int pinjie_;
  /// <summary>
  ///Pinjie===>品阶
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Pinjie {
    get { return pinjie_; }
    set {
      pinjie_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoodsConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoodsConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemID != other.ItemID) return false;
    if (Name != other.Name) return false;
    if (Quality != other.Quality) return false;
    if (IconNameMan != other.IconNameMan) return false;
    if (IconNameWomen != other.IconNameWomen) return false;
    if (ItemType != other.ItemType) return false;
    if (FuncDesc != other.FuncDesc) return false;
    if (Desc != other.Desc) return false;
    if (MaxStack != other.MaxStack) return false;
    if (ItemSort != other.ItemSort) return false;
    if (SellGold != other.SellGold) return false;
    if (UseLevel != other.UseLevel) return false;
    if (GetAudioID != other.GetAudioID) return false;
    if (UseAudioID != other.UseAudioID) return false;
    if (ValidType != other.ValidType) return false;
    if (ValidTime != other.ValidTime) return false;
    if (ComposeDesc != other.ComposeDesc) return false;
    if (CanotUseTip != other.CanotUseTip) return false;
    if (FuncValuex != other.FuncValuex) return false;
    if (Func1 != other.Func1) return false;
    if (Func2 != other.Func2) return false;
    if (Func3 != other.Func3) return false;
    if (DecomposeMoneyType != other.DecomposeMoneyType) return false;
    if (DecomposeMoneyCnt != other.DecomposeMoneyCnt) return false;
    if (GetDesc != other.GetDesc) return false;
    if (AutoUse != other.AutoUse) return false;
    if (ActiveFashionID != other.ActiveFashionID) return false;
    if (CanSelectBox != other.CanSelectBox) return false;
    if (CanSell != other.CanSell) return false;
    if (CanCompose != other.CanCompose) return false;
    if (GetWayList1 != other.GetWayList1) return false;
    if (GetWayList2 != other.GetWayList2) return false;
    if (GetWayList3 != other.GetWayList3) return false;
    if (GetWayList4 != other.GetWayList4) return false;
    if (UseJumpPanel != other.UseJumpPanel) return false;
    if (Pinjie != other.Pinjie) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemID != 0) hash ^= ItemID.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Quality != 0) hash ^= Quality.GetHashCode();
    if (IconNameMan.Length != 0) hash ^= IconNameMan.GetHashCode();
    if (IconNameWomen.Length != 0) hash ^= IconNameWomen.GetHashCode();
    if (ItemType != 0) hash ^= ItemType.GetHashCode();
    if (FuncDesc.Length != 0) hash ^= FuncDesc.GetHashCode();
    if (Desc.Length != 0) hash ^= Desc.GetHashCode();
    if (MaxStack != 0) hash ^= MaxStack.GetHashCode();
    if (ItemSort != 0) hash ^= ItemSort.GetHashCode();
    if (SellGold != 0) hash ^= SellGold.GetHashCode();
    if (UseLevel != 0) hash ^= UseLevel.GetHashCode();
    if (GetAudioID != 0) hash ^= GetAudioID.GetHashCode();
    if (UseAudioID != 0) hash ^= UseAudioID.GetHashCode();
    if (ValidType != 0) hash ^= ValidType.GetHashCode();
    if (ValidTime != 0) hash ^= ValidTime.GetHashCode();
    if (ComposeDesc.Length != 0) hash ^= ComposeDesc.GetHashCode();
    if (CanotUseTip.Length != 0) hash ^= CanotUseTip.GetHashCode();
    if (FuncValuex != 0) hash ^= FuncValuex.GetHashCode();
    if (Func1 != 0) hash ^= Func1.GetHashCode();
    if (Func2 != 0) hash ^= Func2.GetHashCode();
    if (Func3 != 0) hash ^= Func3.GetHashCode();
    if (DecomposeMoneyType != 0) hash ^= DecomposeMoneyType.GetHashCode();
    if (DecomposeMoneyCnt != 0) hash ^= DecomposeMoneyCnt.GetHashCode();
    if (GetDesc.Length != 0) hash ^= GetDesc.GetHashCode();
    if (AutoUse != 0) hash ^= AutoUse.GetHashCode();
    if (ActiveFashionID != 0) hash ^= ActiveFashionID.GetHashCode();
    if (CanSelectBox != 0) hash ^= CanSelectBox.GetHashCode();
    if (CanSell != 0) hash ^= CanSell.GetHashCode();
    if (CanCompose != 0) hash ^= CanCompose.GetHashCode();
    if (GetWayList1 != 0) hash ^= GetWayList1.GetHashCode();
    if (GetWayList2 != 0) hash ^= GetWayList2.GetHashCode();
    if (GetWayList3 != 0) hash ^= GetWayList3.GetHashCode();
    if (GetWayList4 != 0) hash ^= GetWayList4.GetHashCode();
    if (UseJumpPanel != 0) hash ^= UseJumpPanel.GetHashCode();
    if (Pinjie != 0) hash ^= Pinjie.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemID);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Quality != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Quality);
    }
    if (IconNameMan.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(IconNameMan);
    }
    if (IconNameWomen.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(IconNameWomen);
    }
    if (ItemType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(ItemType);
    }
    if (FuncDesc.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(FuncDesc);
    }
    if (Desc.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Desc);
    }
    if (MaxStack != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(MaxStack);
    }
    if (ItemSort != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ItemSort);
    }
    if (SellGold != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(SellGold);
    }
    if (UseLevel != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(UseLevel);
    }
    if (GetAudioID != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(GetAudioID);
    }
    if (UseAudioID != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(UseAudioID);
    }
    if (ValidType != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(ValidType);
    }
    if (ValidTime != 0) {
      output.WriteRawTag(128, 1);
      output.WriteInt32(ValidTime);
    }
    if (ComposeDesc.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(ComposeDesc);
    }
    if (CanotUseTip.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(CanotUseTip);
    }
    if (FuncValuex != 0) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(FuncValuex);
    }
    if (Func1 != 0) {
      output.WriteRawTag(160, 1);
      output.WriteInt32(Func1);
    }
    if (Func2 != 0) {
      output.WriteRawTag(168, 1);
      output.WriteInt32(Func2);
    }
    if (Func3 != 0) {
      output.WriteRawTag(176, 1);
      output.WriteInt32(Func3);
    }
    if (DecomposeMoneyType != 0) {
      output.WriteRawTag(184, 1);
      output.WriteInt32(DecomposeMoneyType);
    }
    if (DecomposeMoneyCnt != 0) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(DecomposeMoneyCnt);
    }
    if (GetDesc.Length != 0) {
      output.WriteRawTag(202, 1);
      output.WriteString(GetDesc);
    }
    if (AutoUse != 0) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(AutoUse);
    }
    if (ActiveFashionID != 0) {
      output.WriteRawTag(216, 1);
      output.WriteInt32(ActiveFashionID);
    }
    if (CanSelectBox != 0) {
      output.WriteRawTag(224, 1);
      output.WriteInt32(CanSelectBox);
    }
    if (CanSell != 0) {
      output.WriteRawTag(232, 1);
      output.WriteInt32(CanSell);
    }
    if (CanCompose != 0) {
      output.WriteRawTag(240, 1);
      output.WriteInt32(CanCompose);
    }
    if (GetWayList1 != 0) {
      output.WriteRawTag(248, 1);
      output.WriteInt32(GetWayList1);
    }
    if (GetWayList2 != 0) {
      output.WriteRawTag(128, 2);
      output.WriteInt32(GetWayList2);
    }
    if (GetWayList3 != 0) {
      output.WriteRawTag(136, 2);
      output.WriteInt32(GetWayList3);
    }
    if (GetWayList4 != 0) {
      output.WriteRawTag(144, 2);
      output.WriteInt32(GetWayList4);
    }
    if (UseJumpPanel != 0) {
      output.WriteRawTag(152, 2);
      output.WriteInt32(UseJumpPanel);
    }
    if (Pinjie != 0) {
      output.WriteRawTag(160, 2);
      output.WriteInt32(Pinjie);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemID);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Quality != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
    }
    if (IconNameMan.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameMan);
    }
    if (IconNameWomen.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameWomen);
    }
    if (ItemType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemType);
    }
    if (FuncDesc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FuncDesc);
    }
    if (Desc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
    }
    if (MaxStack != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStack);
    }
    if (ItemSort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemSort);
    }
    if (SellGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellGold);
    }
    if (UseLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseLevel);
    }
    if (GetAudioID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetAudioID);
    }
    if (UseAudioID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseAudioID);
    }
    if (ValidType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValidType);
    }
    if (ValidTime != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(ValidTime);
    }
    if (ComposeDesc.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(ComposeDesc);
    }
    if (CanotUseTip.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CanotUseTip);
    }
    if (FuncValuex != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(FuncValuex);
    }
    if (Func1 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Func1);
    }
    if (Func2 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Func2);
    }
    if (Func3 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Func3);
    }
    if (DecomposeMoneyType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(DecomposeMoneyType);
    }
    if (DecomposeMoneyCnt != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(DecomposeMoneyCnt);
    }
    if (GetDesc.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GetDesc);
    }
    if (AutoUse != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoUse);
    }
    if (ActiveFashionID != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActiveFashionID);
    }
    if (CanSelectBox != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CanSelectBox);
    }
    if (CanSell != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CanSell);
    }
    if (CanCompose != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CanCompose);
    }
    if (GetWayList1 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GetWayList1);
    }
    if (GetWayList2 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GetWayList2);
    }
    if (GetWayList3 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GetWayList3);
    }
    if (GetWayList4 != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GetWayList4);
    }
    if (UseJumpPanel != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(UseJumpPanel);
    }
    if (Pinjie != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Pinjie);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoodsConfig other) {
    if (other == null) {
      return;
    }
    if (other.ItemID != 0) {
      ItemID = other.ItemID;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Quality != 0) {
      Quality = other.Quality;
    }
    if (other.IconNameMan.Length != 0) {
      IconNameMan = other.IconNameMan;
    }
    if (other.IconNameWomen.Length != 0) {
      IconNameWomen = other.IconNameWomen;
    }
    if (other.ItemType != 0) {
      ItemType = other.ItemType;
    }
    if (other.FuncDesc.Length != 0) {
      FuncDesc = other.FuncDesc;
    }
    if (other.Desc.Length != 0) {
      Desc = other.Desc;
    }
    if (other.MaxStack != 0) {
      MaxStack = other.MaxStack;
    }
    if (other.ItemSort != 0) {
      ItemSort = other.ItemSort;
    }
    if (other.SellGold != 0) {
      SellGold = other.SellGold;
    }
    if (other.UseLevel != 0) {
      UseLevel = other.UseLevel;
    }
    if (other.GetAudioID != 0) {
      GetAudioID = other.GetAudioID;
    }
    if (other.UseAudioID != 0) {
      UseAudioID = other.UseAudioID;
    }
    if (other.ValidType != 0) {
      ValidType = other.ValidType;
    }
    if (other.ValidTime != 0) {
      ValidTime = other.ValidTime;
    }
    if (other.ComposeDesc.Length != 0) {
      ComposeDesc = other.ComposeDesc;
    }
    if (other.CanotUseTip.Length != 0) {
      CanotUseTip = other.CanotUseTip;
    }
    if (other.FuncValuex != 0) {
      FuncValuex = other.FuncValuex;
    }
    if (other.Func1 != 0) {
      Func1 = other.Func1;
    }
    if (other.Func2 != 0) {
      Func2 = other.Func2;
    }
    if (other.Func3 != 0) {
      Func3 = other.Func3;
    }
    if (other.DecomposeMoneyType != 0) {
      DecomposeMoneyType = other.DecomposeMoneyType;
    }
    if (other.DecomposeMoneyCnt != 0) {
      DecomposeMoneyCnt = other.DecomposeMoneyCnt;
    }
    if (other.GetDesc.Length != 0) {
      GetDesc = other.GetDesc;
    }
    if (other.AutoUse != 0) {
      AutoUse = other.AutoUse;
    }
    if (other.ActiveFashionID != 0) {
      ActiveFashionID = other.ActiveFashionID;
    }
    if (other.CanSelectBox != 0) {
      CanSelectBox = other.CanSelectBox;
    }
    if (other.CanSell != 0) {
      CanSell = other.CanSell;
    }
    if (other.CanCompose != 0) {
      CanCompose = other.CanCompose;
    }
    if (other.GetWayList1 != 0) {
      GetWayList1 = other.GetWayList1;
    }
    if (other.GetWayList2 != 0) {
      GetWayList2 = other.GetWayList2;
    }
    if (other.GetWayList3 != 0) {
      GetWayList3 = other.GetWayList3;
    }
    if (other.GetWayList4 != 0) {
      GetWayList4 = other.GetWayList4;
    }
    if (other.UseJumpPanel != 0) {
      UseJumpPanel = other.UseJumpPanel;
    }
    if (other.Pinjie != 0) {
      Pinjie = other.Pinjie;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemID = input.ReadInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Quality = input.ReadInt32();
          break;
        }
        case 34: {
          IconNameMan = input.ReadString();
          break;
        }
        case 42: {
          IconNameWomen = input.ReadString();
          break;
        }
        case 48: {
          ItemType = input.ReadInt32();
          break;
        }
        case 58: {
          FuncDesc = input.ReadString();
          break;
        }
        case 66: {
          Desc = input.ReadString();
          break;
        }
        case 72: {
          MaxStack = input.ReadInt32();
          break;
        }
        case 80: {
          ItemSort = input.ReadInt32();
          break;
        }
        case 88: {
          SellGold = input.ReadInt32();
          break;
        }
        case 96: {
          UseLevel = input.ReadInt32();
          break;
        }
        case 104: {
          GetAudioID = input.ReadInt32();
          break;
        }
        case 112: {
          UseAudioID = input.ReadInt32();
          break;
        }
        case 120: {
          ValidType = input.ReadInt32();
          break;
        }
        case 128: {
          ValidTime = input.ReadInt32();
          break;
        }
        case 138: {
          ComposeDesc = input.ReadString();
          break;
        }
        case 146: {
          CanotUseTip = input.ReadString();
          break;
        }
        case 152: {
          FuncValuex = input.ReadInt32();
          break;
        }
        case 160: {
          Func1 = input.ReadInt32();
          break;
        }
        case 168: {
          Func2 = input.ReadInt32();
          break;
        }
        case 176: {
          Func3 = input.ReadInt32();
          break;
        }
        case 184: {
          DecomposeMoneyType = input.ReadInt32();
          break;
        }
        case 192: {
          DecomposeMoneyCnt = input.ReadInt32();
          break;
        }
        case 202: {
          GetDesc = input.ReadString();
          break;
        }
        case 208: {
          AutoUse = input.ReadInt32();
          break;
        }
        case 216: {
          ActiveFashionID = input.ReadInt32();
          break;
        }
        case 224: {
          CanSelectBox = input.ReadInt32();
          break;
        }
        case 232: {
          CanSell = input.ReadInt32();
          break;
        }
        case 240: {
          CanCompose = input.ReadInt32();
          break;
        }
        case 248: {
          GetWayList1 = input.ReadInt32();
          break;
        }
        case 256: {
          GetWayList2 = input.ReadInt32();
          break;
        }
        case 264: {
          GetWayList3 = input.ReadInt32();
          break;
        }
        case 272: {
          GetWayList4 = input.ReadInt32();
          break;
        }
        case 280: {
          UseJumpPanel = input.ReadInt32();
          break;
        }
        case 288: {
          Pinjie = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
